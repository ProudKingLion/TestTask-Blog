version: '3.0'

services:
  backend:
    container_name: nest-back
    build:
      context: ./backend
    env_file:
      - ./backend/.production.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - 7100:7100
      - 9229:9229
    networks:
      - application-network
    command: npm run start
    depends_on:
      - postgres
    restart: always
  postgres:
    container_name: postgres
    image: postgres:14
    networks:
      - application-network
    env_file:
      - ./backend/.production.env
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_NAME}"
    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - ./backend/.production.env
    networks:
      - application-network
  frontend:
    container_name: react-front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: react
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/
    networks:
      - application-network

volumes:
  pgdata:

networks:
  application-network:
